plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "com.github.node-gradle.node" version "7.0.2"
}

group = 'com.lc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

node {
	version = "20.9.0"
	download = true
	workDir = file("${project.projectDir}/src/main/react/nodejs")
	npmWorkDir = file("${project.projectDir}/src/main/react/npm")
	nodeProjectDir = file("${project.projectDir}/src/main/react")
}

task npmInstallDependencies(type: NpmTask) {
	execOverrides {
		it.ignoreExitValue = true
		it.workingDir = 'src/main/react'
	}
	args = ['install']
}

task npmBuild(type: NpmTask) {
	execOverrides {
		it.workingDir = 'src/main/react'
	}
	args = ['run', 'build']
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	testImplementation 'org.junit.platform:junit-platform-launcher:1.10.2'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.platform', module: 'junit-platform-launcher'
	}
	testImplementation 'org.junit.platform:junit-platform-launcher:1.10.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
	useJUnitPlatform()
}
